appName: idurar-erp-crm/ravis
appUniqueId: ravis/idurar-erp-crm
appInfo:
  description: this is crm app
  appVersion: 1.0.0
  appRepoUrl: ''
  appIconUrl: ''
  appAuthorUserId: ravis
  forkedFrom: ''
technicalInfo:
  supportedLanguages:
    - react
    - nodejs
  supportedFrameworks:
    - react
    - express
  secrets: []
  services:
    - node
  knowledgebases: []
  instruction: []
usage:
  develop:
    agents: []
    layout: ''
    run:
      - shell:
          command: cd backend && npm start
      - shell:
          command: cd frontend && npm run dev
  install:
    steps:
      - instruction:
          AIinstruction: >-
            #### Step 1: Install Backend Dependencies  In your terminal,
            navigate to the /backend directory  ```bash cd backend ```  the urn
            the following command to install the backend dependencies:  ```bash
            npm install ```  This command will install all the required packages
            specified in the package.json file.  #### Step 2: Run Setup Script 
            While still in the /backend directory of the project, execute the
            following command to run the setup script:  ```bash npm run setup
            ```  This setup script may perform necessary database migrations or
            any other initialization tasks required for the project.  #### Step
            3: Run the Backend Server  In the same terminal, run the following
            command to start the backend server:  ```bash npm run dev ```  This
            command will start the backend server, and it will listen for
            incoming requests.  #### Step 4: Install Frontend Dependencies  Open
            a new terminal window , and run the following command to install the
            frontend dependencies:  ```bash cd frontend ```  ```bash npm install
            ```  #### Step 5: Run the Frontend Server  After installing the
            frontend dependencies, run the following command in the same
            terminal to start the frontend server:  ```bash npm run dev ``` 
            This command will start the frontend server, and you'll be able to
            access the website on localhost:3000 in your web browser. 
            :exclamation: :warning:` If you encounter an OpenSSL error while
            running the frontend server, follow these additional steps:`  Reason
            behind error: This is caused by the node.js V17 compatible issues
            with OpenSSL, see
            [this](https://github.com/nodejs/node/issues/40547) and
            [this](https://github.com/webpack/webpack/issues/14532) issue on
            GitHub.   Try one of these and error will be solved  - > upgrade to
            Node.js v20.  - > Enable legacy OpenSSL provider  Here is how you
            can enable legacy OpenSSL provider  - On Unix-like (Linux, macOS,
            Git bash, etc.)  ```bash export
            NODE_OPTIONS=--openssl-legacy-provider ```  - On Windows command
            prompt:  ```bash set NODE_OPTIONS=--openssl-legacy-provider ```  -
            On PowerShell:  ```bash $env:NODE_OPTIONS =
            "--openssl-legacy-provider" ```  Here is
            [reference](https://github.com/webpack/webpack/issues/14532#issuecomment-947012063)
            about enabling legacy OpenSSL provider  After trying above
            solutions, run below command  ```bash npm run dev ```  > If you
            still facing issue, then follow [this stackoverflow
            thread](https://stackoverflow.com/questions/69692842/error-message-error0308010cdigital-envelope-routinesunsupported).
            It has so many different types of opinions. You definitely have
            solution after going through the thread.`     
      - command:
          type: shell
          description: cd frontend && npm install
          command: cd frontend && npm install
      - command:
          type: shell
          description: cd backend && npm install
          command: cd backend && npm install
    customInstallationAgent:
      agent: ''
      enabled: false
  appUse:
    agents: []
    layout: ''
    prerunsteps: |-
      - shell:
             command: npm run start
    appPreview:
      type: ''
